apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: api-ingress
  labels:
    component: api-ingress
spec:
  rules:
  - host: tenants.mycodeonline.com
    http:
      paths:
      - backend:
          serviceName: tenants-svc
          servicePort: 80
  - host: content.mycodeonline.com
    http:
      paths:
      - backend:
          serviceName: content-svc
          servicePort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: gateway-svc
  labels:
    component: gateway-svc
spec:
  ports:
    - port: 80
  selector:
    component: gateway-pod

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: gateway-deploy-pod
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: gateway-pod
    spec:
      containers:
          - name: gateway-con
            image: peterkneale/micro.services.gateway:latest
            imagePullPolicy: Always
            env:
              - name: ASPNETCORE_ENVIRONMENT
                value: "Production"
              - name: ASPNETCORE_URLS
                value: "http://0.0.0.0:80"
              - name: SEQ_URL
                value: "http://logs-svc"
            ports:
              - containerPort: 80
                name: api-port
            livenessProbe:
              httpGet:
                path: /health/alive
                port: api-port
            readinessProbe:
              httpGet:
                path: /health/ready
                port: api-port

---

apiVersion: v1
kind: Service
metadata:
  name: tenants-svc
  labels:
    component: tenants-svc
spec:
  ports:
    - port: 80
  selector:
    component: tenants-pod

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: tenants-deploy-pod
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: tenants-pod
    spec:
      containers:
          - name: tenants-con
            image: peterkneale/micro.services.tenants:latest
            imagePullPolicy: Always
            env:
              - name: ASPNETCORE_ENVIRONMENT
                value: "Production"
              - name: ASPNETCORE_URLS
                value: "http://0.0.0.0:80"
              - name: CONNECTION_STRING
                value: "Data Source=db-svc;Initial Catalog=Tenants;User Id=sa;Password=Password123*;persist security info=False;packet size=4096"
              - name: SEQ_URL
                value: "http://logs-svc"
            ports:
              - containerPort: 80
                name: api-port
            livenessProbe:
              httpGet:
                path: /health/alive
                port: api-port
            readinessProbe:
              httpGet:
                path: /health/ready
                port: api-port

---
apiVersion: v1
kind: Service
metadata:
  name: content-svc
  labels:
    component: content-svc
spec:
  ports:
    - port: 80
  selector:
    component: content-pod

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: content-deploy-pod
spec:
  replicas: 1
  template:
    metadata:
      labels:
        component: content-pod
    spec:
      containers:
          - name: content-con
            image: peterkneale/micro.services.content:latest
            imagePullPolicy: Always
            env:
              - name: ASPNETCORE_ENVIRONMENT
                value: "Production"
              - name: ASPNETCORE_URLS
                value: "http://0.0.0.0:80"
              - name: CONNECTION_STRING
                value: "Data Source=db-svc;Initial Catalog=Content;User Id=sa;Password=Password123*;persist security info=False;packet size=4096"
              - name: SEQ_URL
                value: "http://logs-svc"
            ports:
              - containerPort: 80
                name: api-port
            livenessProbe:
              httpGet:
                path: /health/alive
                port: api-port
            readinessProbe:
              httpGet:
                path: /health/ready
                port: api-port