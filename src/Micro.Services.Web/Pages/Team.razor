@page "/teams/{id}"
@inject IGatewayApi Api

<h1>Team</h1>

@if (IsLoading)
{
    <p>Loading...</p>
}

@if (!IsLoading)
{
    <h2>@_model.Team.Name</h2>

    <div class="card">
        <div class="card-header">
            Users in this team
        </div>
        <div class="list-group list-group-flush">
            @foreach (var user in _model.Team.Users)
            {
                <a href="users/@user.Id" class="list-group-item list-group-item-action">@user.Name</a>
            }
        </div>
    </div>
    
    <br />

    <div class="card">
        <div class="card-header">
            Roles this team has
        </div>
        <div class="list-group list-group-flush">
            @foreach (var role in _model.Team.Roles)
            {
                <a href="roles/@role.Id" class="list-group-item list-group-item-action">@role.Name</a>
            }
        </div>
    </div>
}

@functions
{
    [Parameter] string id { get; set; }

    private Model _model;

    private bool IsLoading => _model == null;

    protected async override Task OnInitAsync()
    {
        var query = @"{ team (id: '$id') {id name users { id name} roles { id name } } }".Replace("'", "\"").Replace("$id", id);
        _model = await Api.ExecuteGraphQuery<Model>(query);
    }

    public class Model
    {
        public TeamModel Team { get; set; }
    }
}
