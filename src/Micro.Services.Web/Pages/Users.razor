@page "/users"
@inject IGatewayApi Api

<h1>Users</h1>

@if (IsLoading)
{
    <p>Loading...</p>
}

@if (!IsLoading)
{
    @foreach (var user in _model.Users)
    {
        <li>@user.Name [@Describe(user.Teams)]</li>
    }
}

@functions
{

    private PageModel _model;
    private bool IsLoading => _model == null;

    protected async override Task OnInitAsync()
    {
        _model = await Api.ExecuteGraphQuery<PageModel>("{ users { name teams { id name} } }");
    }

    public class PageModel
    {
        public IEnumerable<UserModel> Users { get; set; }
    }

    public class UserModel
    {
        public string Name { get; set; }
        public IEnumerable<TeamModel> Teams { get; set; }
    }

    public class TeamModel
    {
        public string Id { get; set; }

        public string Name { get; set; }
    }

    private string Describe(IEnumerable<TeamModel> teams)
    {
        if (teams == null || !teams.Any())
        {
            return "none";
        }
        else
        {
            return string.Join(",", teams.Select(x=>$"{x.Id}{x.Name}"));
        }
    }
}
